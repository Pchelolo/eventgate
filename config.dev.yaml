# Number of worker processes to spawn.
# Set to 0 to run everything in a single process without clustering.
# Use 'ncpu' to run as many workers as there are CPU units
num_workers: 0

# Log error messages and gracefully restart a worker if v8 reports that it
# uses more heap (note: not RSS) than this many mb.
worker_heap_limit_mb: 250

# Logger info
logging:
  level: info

#  streams:
#  # Use gelf-stream -> logstash
#  - type: gelf
#    host: logstash1003.eqiad.wmnet
#    port: 12201

# Statsd metrics reporter
metrics:
  #type: log
  #host: localhost
  #port: 8125

services:
  - name: service-template-node
    # a relative path or the name of an npm package, if different from name
    module: ./app.js
    # optionally, a version constraint of the npm package
    # version: ^0.4.0
    # per-service config
    conf:
      port: 6927
      # interface: localhost # uncomment to only listen on localhost
      # more per-service config settings
      # the location of the spec, defaults to spec.yaml if not specified
      # spec: ./spec.yaml
      user_agent: eventbus

      eventbus_init_module: '../lib/wikimedia-eventbus'

      # This field in each event will be used to extract a destination 'stream' name.
      # This will equal the destination Kafka topic, unless a topic transformation
      # function is configured.  If using topic transformation, the value extracted
      # from this field will be passed to the topic transformation function.
      
      #  TODO change this to meta.stream and fill in meta.topic from prefixed value?
      # stream != topic!
      stream_field: meta.topic
      id_field: meta.id
      topic_prefix: 'test.'

      error_schema_uri: error/2
      error_stream: eventbus.event-error
      # This field in each event will be used to extract a
      # (possibly relative) schema uri.
      schema_uri_field: meta.schema_uri

      # If set, this URI will be prepended to any relative schema URI
      # extracted from each event's schema_field
      schema_base_uri: ../event-schemas/jsonschema/
      #schema_base_uri: https://raw.githubusercontent.com/wikimedia/mediawiki-event-schemas/master/jsonschema

      # If set, this will be appended to every extracted schema_uri if that schema_uri
      # does not already end with a file extension.
      schema_file_extension: .yaml

      # kafka configs go here.
      kafka:
        conf:
          metadata.broker.list: '10.11.12.13:9092'
        # kafka topic conf goes here
        topic_conf: {}
